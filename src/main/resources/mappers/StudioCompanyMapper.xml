<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">



<mapper namespace="kr.co.udf.company.dao.StudioDao"> 
	<select id="listAll" resultType="kr.co.udf.common.company.domain.StudioCompany">
	<![CDATA[
	SELECT sc_no, 
	sc_nm, 
	sc_main_nm, 
	sc_addr, 
	sc_main_image, 
	sc_email, 
	sc_smy_intro, 
	sc_introduce, 
	sessionkey, 
	regdate, 
	updatedate
	FROM studio_company
	]]> 
	</select>
	
  <select id="listPage" resultType="kr.co.udf.common.company.domain.StudioCompany">
    <![CDATA[
SELECT *
FROM (SELECT CEIL (rownum / 12) page,
   sc.sc_no, 
   sc.sc_nm, 
   sc.sc_main_nm, 
   sc.sc_addr, 
   sc.sc_main_image, 
   sc.sc_email, 
   sc.sc_smy_intro, 
   sc.sc_introduce, 
   sc.sessionkey, 
   sc.regdate, 
   sc.updatedate,
   ROUND((SELECT AVG(sr.sr_point) FROM studio_review sr WHERE sr.sc_no = sc.sc_no), 1) avg,
   (SELECT count(*) FROM studio_review sr WHERE sr.sc_no = sc.sc_no) count
FROM (SELECT *
   FROM studio_company order by sc_no desc) sc)
WHERE page = #{page}
    ]]>
   </select>
	
   <select id="listCriteria" resultType="kr.co.udf.common.company.domain.StudioCompany">
    <![CDATA[
   SELECT
     *
   FROM
     (
    SELECT rownum rn,
   sc.sc_no, 
   sc.sc_nm, 
   sc.sc_main_nm, 
   sc.sc_addr, 
   sc.sc_main_image, 
   sc.sc_email, 
   sc.sc_smy_intro, 
   sc.sc_introduce,
   sc.sessionkey, 
   sc.regdate, 
   sc.updatedate,
   ROUND((SELECT AVG(sr.sr_point) FROM studio_review sr WHERE sr.sc_no = sc.sc_no), 1) avg,
   (SELECT count(*) FROM studio_review sr WHERE sr.sc_no = sc.sc_no) count
    FROM studio_company sc
    WHERE rownum <= #{page} * #{perPageNum}
     and sc.sc_no > 0
      order by sc.sc_no DESC
     )
   where rn > (#{page} -1) * #{perPageNum}
    ]]>
   </select>
   
    <select id="countPaging" resultType="int">
    <![CDATA[
   SELECT count(sc_no)
   FROM studio_company
   WHERE sc_no > 0
   ]]>
   </select>
   
	
<sql id="search">
   <if test="searchType == 'name'.toString()">
     and sc_nm like '%'|| #{keyword}||'%'
   </if>
   <if test="searchType == 'addr'.toString()">
     and sc_addr like '%'|| #{keyword}||'%'
   </if>
</sql>

	
    <select id="listSearch" resultType="kr.co.udf.common.company.domain.StudioCompany">
<![CDATA[
   select *
   from
     (
    SELECT rownum rn,
   sc.sc_no, 
   sc.sc_nm, 
   sc.sc_main_nm, 
   sc.sc_addr, 
   sc.sc_main_image, 
   sc.sc_email, 
   sc.sc_smy_intro, 
   sc.sc_pw, 
   sc.sc_introduce,
   sc.sessionkey, 
   sc.regdate, 
   sc.updatedate,
   ROUND((SELECT AVG(sr.sr_point) FROM studio_review sr WHERE sr.sc_no = sc.sc_no), 1) avg,
   (SELECT count(*) FROM studio_review sr WHERE sr.sc_no = sc.sc_no) count
    FROM studio_company sc
     where 1=1
     ]]>
       <include refid="search"></include>
<![CDATA[ 
     and rownum <= #{page} * #{perPageNum}
     and sc.sc_no > 0
     order by sc.sc_no DESC
     )
   where rn > (#{page} -1) * #{perPageNum}
    ]]>
       
   </select>
   
   
  
       <select id="listSearchCount" resultType="int">
    <![CDATA[
   select count(sc_no)
   from studio_company
   where sc_no > 0
   ]]>
      <include refid="search"></include>
   </select>   
	
	<!-- 페이지 리드, 리뷰  -->
	<select id="detailStudio" resultType="kr.co.udf.common.company.domain.StudioCompany">
	<![CDATA[
	SELECT
		sc_no,
		sc_nm,
		sc_company_no,
		sc_main_nm, 
		sc_addr, 
		sc_main_image,
		sc_email,
		sc_tel,
		sc_introduce,
		sc_smy_intro
	FROM studio_company
	WHERE sc_no = #{sc_no}
	]]> 
	</select>	
	
	<insert id="addReview">
	INSERT INTO studio_review (sr_no, sc_no, user_nm, sr_subject, sr_content, sr_point, regdate, updatedate)
	VALUES (studio_review_seq.nextval, #{sc_no}, #{user_nm}, #{sr_subject}, #{sr_content}, #{sr_point}, sysdate, sysdate) 
	</insert>
	
	<select id="reviewStudio" resultType="kr.co.udf.company.domain.StudioReview">
	<![CDATA[
	SELECT
		sr_no, 
		sc_no,
		sr_content,  	
		sr_point, 
		TO_CHAR(regdate, 'YY-MM-DD') AS regdate,
	    updatedate
	FROM studio_review 	
	WHERE sc_no = #{sc_no}
	ORDER BY sr_no DESC
	]]>
	</select>
	
	<select id="avgPoint" resultType="double">
	<![CDATA[
	SELECT
		ROUND(AVG(sr_point), 1) AS avg	 
	FROM studio_review 	
	WHERE sc_no = #{sc_no}
	]]>
	</select> 
	
	<select id="countReview" resultType="int">
	<![CDATA[
	SELECT
		COUNT(*) AS count	 
	FROM studio_review 	
	WHERE sc_no = #{sc_no}
	]]>
	</select>
</mapper>